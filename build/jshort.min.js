function makeElement(e,t,n){return new JSHElement({tag:e,body:t,props:n})}const ReferenceVariable=e=>({value:e}),makeBindCondition=(e,t)=>({condition:e,value:t}),syncVariable=(refVar,expression)=>{setInterval(()=>{let value=eval(expression);refVar.value=value},10)};class JSHComponent{constructor(e,t){this.elements=t;let n=makeElement("div","",this.props=e=e||{});for(var r of this.elements)n.append(r);this.container=n,this.element=n.element}addElement(e){return this.container.append(e),this}kill(){this.container.kill()}html(e){return this.container.html(e),this}}class JSHElement{constructor(e){var t=e.tag,n=e.body,r=e.props,e=e.element;if(this.children=[],null==e){let e=document.createElement(t);if(null!=n&&(e.innerHTML=n),null!=r)for(var l of Object.keys(r))e.setAttribute(l,r[l]);this.element=e}else this.element=e}on(e,t){return this.element.addEventListener(e,t),this}style(e,t){switch(e){case"add":for(var n of Object.keys(t))this.element.style[n]=t[n];break;case"remove":for(var r of t)this.element.style.removeProperty(r);break;default:throw new Error("Invalid action!")}}append(e){return this.element.appendChild(e.element),this.children.push(e),this}kill(){this.element.remove()}html(e){return this.element.innerHTML=e,this}bindAttribute(attribute,refVar,obj,conditions){let last=refVar.value;setInterval(()=>{if(last!=refVar.value){let index=-1;for(let i=0;i<conditions.length;i++)if(eval(conditions[i].condition)){index=i;break}if(-1==index)throw new Error("No true condition found");let value=conditions[index].value.split("{#}");last=refVar.value,this.element[attribute]=value.join(refVar.value)}},50)}}class JSHElementList{constructor(e){return this.elements=[],e.forEach(e=>{this.elements.push(e)}),this}on(t,n){return this.elements.forEach(e=>{e.on(t,n)}),this}style(t,n){return this.elements.forEach(e=>{e.style(t,n)}),this}}function S(e,t){let r;if(r=(null==t?document:t.element).querySelectorAll(e),0==r.length)return null;if(1==r.length){var n=r[0];let e={};for(propName of n.attributes)e[propName]=n.attributes[propName];return new JSHElement({tag:n.tagName,body:n.innerHTML,props:e,element:n})}{let n=[];return r.forEach(e=>{let t={};for(propName of e.attributes)t[propName]=e.attributes[propName];n.push(new JSHElement({tag:e.tagName,body:e.innerHTML,props:t,element:e}))}),new JSHElementList(n)}}
//# sourceMappingURL=jshort.min.map